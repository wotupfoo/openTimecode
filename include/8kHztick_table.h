#pragma once

#ifndef _8kHztick_table_h_
#define _8kHztick_table_h_

#ifdef DEBUG
#include "debug_scope.h"
#endif

// Frame rates
// 23.98, 24, 25, 29.97, 29.97DF, 30

// Crude but it turns 24,25,30 into 0,1,2 offset in the trigger tick table.
const uint8_t fps_to_trigger_ticks_table [31] = {/*0..9*/  0,0,0,0,0,0,0,0,0,0,
										  /*10..19*/0,0,0,0,0,0,0,0,0,0,
										  /*20..23*/0,0,0,0,
										  /*24fps*/ 0,
										  /*25fps*/ 1,
										  /*26..29*/0,0,0,0,	
										  /*30fps*/ 2}; 

inline uint8_t fps_to_trigger_ticks(double fps) {
	if(fps == 23.98)	return 0;
	if(fps == 24.0)		return 1;
	if(fps == 25.0)		return 2;
	if(fps == 29.97)	return 3;
	if(fps == 30.0)		return 4;
#ifdef DEBUG
	DEBUGFAIL(LED_BUILTIN);
#endif
	return 4;	// Default to 30fps
}

const uint16_t trigger_ticks_8kHz[][31] = {/* 8kHz tick value for a given frame number for each framerate in the range 0..30 framenumber */
		/*23.98  */{0,342,683,1025,1366,1708,2050,2391,2733,3075,3416,3758,4099,4441,4783,5124,5466,5808,6149,6491,6832,7174,7516,7857,8192},//8199,8540,8882,9224,9565,9907,10249},
		/*24	 */{0,341,683,1024,1365,1707,2048,2389,2731,3072,3413,3755,4096,4437,4779,5120,5461,5803,6144,6485,6827,7168,7509,7851,8192},//,8533,8875,9216,9557,9899,10240},
		/*25     */{0,328,655,983,1311,1638,1966,2294,2621,2949,3277,3604,3932,4260,4588,4915,5243,5571,5898,6226,6554,6881,7209,7537,7864,8192},//,8520,8847,9175,9503,9830},
		/*29.97  */{0,273,547,820,1093,1367,1640,1913,2187,2460,2733,3007,3280,3553,3827,4100,4373,4647,4920,5193,5467,5740,6013,6287,6560,6834,7107,7380,7654,7927,8192},//8200},
		/*30fps  */{0,273,546,819,1092,1365,1638,1911,2185,2458,2731,3004,3277,3550,3823,4096,4369,4642,4915,5188,5461,5734,6007,6281,6554,6827,7100,7373,7646,7919,8192}
		};
#endif // _8kHztick_table_h_